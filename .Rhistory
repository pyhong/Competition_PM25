{
eval(g)
integrate(f, lower = -Inf, upper = q)
}
r(600)
rr<-r(600)
rr
str(rr)
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), 6400-2880/1600*2880)*dnorm(x, 150, 40)
})
r<-function(q)
{
eval(g)
integrate(f, lower = -Inf, upper = q)$value-7/12
}
uniroot(r, c(0,1000))
uniroot(r, c(0,1500))
uniroot(r, c(0,1500))
uniroot(r, c(0,1500))
uniroot(r, c(0,1500))
uniroot(r, c(0,1500))
uniroot(r, c(0,1500))
uniroot(r, c(0,1500))
uniroot(r, c(-1500,1500))
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), 6400-2880/1600*2880)*dnorm(x, 150, 40)
})
r<-function(q)
{
eval(g)
integrate(f, lower = -Inf, upper = q)$value-7/12
}
uniroot(r, c(-1500,1500))
r(-1500)
r(1500)
r(0)
r(1)
eval(g)
q
integrate(f, lower = -Inf, upper = q)
rr<-integrate(f, lower = -Inf, upper = q)
rr
str(rr)
r(0)
r(1000)
r(10000)
r(-10000)
r(-1000)
tt<-seq(-1000,1000,by = 0.1)
plot(tt, r(tt))
tt
r(tt)
tt<-seq(-100,100,by = 0.1)
r(tt)
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), 6400-2880/1600*2880)*dnorm(x, 150, 40)
})
r<-function(q)
{
eval(g)
integrate(f, lower = -Inf, upper = q)$value-7/12
}
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), 6400-2880/1600*2880)*dnorm(x, 150, 40)
})
f
f(10)
q
pi <- seq(600,700,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(5000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), 6400-2880/1600*2880))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), 6400-2880/1600*2880)*dnorm(x, 150, 40)
})
r<-function(q)
{
eval(g)
integrate(f, lower = -Inf, upper = q)$value-7/12
}
lm.sol<-lm(pi~ti)
abline(lm.sol, col="red")
summary(lm.sol)
-lm.sol$coefficients[1]
-lm.sol$coefficients[1]/lm.sol$coefficients[1]
-lm.sol$coefficients[1]/lm.sol$coefficients[2]
-lm.sol$coefficients[1]/lm.sol$coefficients[2]
pi <- seq(600,700,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(5000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), 6400-2880/1600*2880))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
lm.sol<-lm(pi~ti)
abline(lm.sol, col="red")
-lm.sol$coefficients[1]/lm.sol$coefficients[2]
cat(paste("root found: ",-lm.sol$coefficients[1]/lm.sol$coefficients[2]))
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), 6400-2880/1600*2880)*dnorm(x, 150, 40)
})
r<-function(q)
{
eval(g)
integrate(f, lower = -Inf, upper = q)$value-7/12
}
r(10)
7/12
pi <- seq(0,1700,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(5000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), 6400-2880/1600*2880))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
pi <- seq(0,1700,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(100, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), 6400-2880/1600*2880))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
lm.sol<-lm(pi~ti)
abline(lm.sol, col="red")
cat(paste("root found: ",-lm.sol$coefficients[1]/lm.sol$coefficients[2]))
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), 6400-2880/1600*2880)*dnorm(x, 150, 40)
})
eval(g)
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), 6400-2880/1600*2880)*dnorm(x, 150, 40)
})
r<-function(q)
{
eval(g)
integrate(f, lower = -Inf, upper = q)$value-7/12
}
ttseq(-10,10,by=0.1)
tt<-seq(-10,10,by=0.1)
tt
plot(tt,r(tt))
r(10)
r(-10)
r(-700)
tt<-seq(-1,1,by=0.01)
plot(tt,r(tt))
tt<-seq(-10,10,by=0.1)
zz<-tt
for(i in 1:length(tt))
zz[i] = r(tt[i])
plot(tt,zz)
tt<-seq(0,700,by=0.1)
zz[i] = r(tt[i])
for(i in 1:length(tt))
zz[i] = r(tt[i])
plot(tt,zz)
dnorm
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), sqrt(6400-2880/1600*2880))*dnorm(x, 150, 40)
})
r<-function(q)
{
eval(g)
integrate(f, lower = -Inf, upper = q)$value-7/12
}
uniroot(r, c(-1500,1500))
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), sqrt(6400-2880/1600*2880))*dnorm(x, 150, 40)
})
r<-function(q)
{
eval(g)
integrate(f, lower = -Inf, upper = q)$value-7/12
}
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), sqrt(6400-2880/1600*2880))*dnorm(x, 150, 40)
})
r<-function(q)
{
eval(g)
integrate(f, lower = -Inf, upper = q)$value-7/12
}
uniroot(r, c(0,700))
tt<-seq(0,700,0.1)
zz<-tt
tt<-seq(0,700,0.1)
zz<-tt
for(i in 1:length(tt))
zz[i] = r(tt[i])
plot(tt,zz)
pi <- seq(0,700,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(100, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), sqrt(6400-2880/1600*2880)))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
pi <- seq(0,700,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(1000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), sqrt(6400-2880/1600*2880)))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
pi <- seq(350,4500,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(1000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), sqrt(6400-2880/1600*2880)))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
pi <- seq(350,450,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(1000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), sqrt(6400-2880/1600*2880)))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
lm.sol<-lm(pi~ti)
abline(lm.sol, col="red")
cat(paste("root found: ",-lm.sol$coefficients[1]/lm.sol$coefficients[2]))
pi <- seq(400,500,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(1000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), sqrt(6400-2880/1600*2880)))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
lm.sol<-lm(pi~ti)
abline(lm.sol, col="red")
cat(paste("root found: ",-lm.sol$coefficients[1]/lm.sol$coefficients[2]))
pi <- seq(400,450,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(1000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), sqrt(6400-2880/1600*2880)))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
lm.sol<-lm(pi~ti)
abline(lm.sol, col="red")
cat(paste("root found: ",-lm.sol$coefficients[1]/lm.sol$coefficients[2]))
pi <- seq(400,450,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(10000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), sqrt(6400-2880/1600*2880)))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
lm.sol<-lm(pi~ti)
abline(lm.sol, col="red")
cat(paste("root found: ",-lm.sol$coefficients[1]/lm.sol$coefficients[2]))
g<-expression({
f<-function(x)
pnorm(q-x, 250+2880/1600*(x - 150), sqrt(6400-2880/1600*2880))*dnorm(x, 150, 40)
})
r<-function(q)
{
eval(g)
integrate(f, lower = -Inf, upper = q)$value-7/12
}
uniroot(r, c(400,450))
tt<-seq(400,450,0.1)
zz<-tt
for(i in 1:length(tt))
zz[i] = r(tt[i])
plot(tt,zz)
pi <- seq(400,450,by = 1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(10000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), sqrt(6400-2880/1600*2880)))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
lm.sol<-lm(pi~ti)
abline(lm.sol, col="red")
cat(paste("root found: ",-lm.sol$coefficients[1]/lm.sol$coefficients[2]))
pi <- seq(400,450,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(10000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), sqrt(6400-2880/1600*2880)))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
lm.sol<-lm(pi~ti)
abline(lm.sol, col="red")
cat(paste("root found: ",-lm.sol$coefficients[1]/lm.sol$coefficients[2]))
pi <- seq(400,450,by = 0.1)
ti <- pi
count <- 1
for(q in ti)
{
x<-rnorm(10000, 150, 40)
p<-sapply(x, function(m) pnorm(q-m, 250+2880/1600*(m - 150), sqrt(6400-2880/1600*2880)))
pi[count]<-(mean(p)-7/12)
count <- count+1
}
plot(ti, pi, type = "l")
lm.sol<-lm(pi~ti)
abline(lm.sol, col="red")
cat(paste("root found: ",-lm.sol$coefficients[1]/lm.sol$coefficients[2]))
Rcpp::sourceCpp('D:/KliveKP/math/Bayesian/Bayesian-Data-Analysis-in-R/ACE/ace_g++.cpp')
Rcpp::sourceCpp('D:/KliveKP/math/Bayesian/Bayesian-Data-Analysis-in-R/ACE/ACE_transform_cpponly.cpp')
install.packages("RcppGSL")
install.packages("RcppGSL")
install.packages("RcppGSL")
install.packages("Rcpp")
Rcpp::sourceCpp('D:/KliveKP/math/Bayesian/Bayesian-Data-Analysis-in-R/ACE/ACE_transform_cpponly.cpp')
Rcpp::sourceCpp('D:/KliveKP/math/Bayesian/Bayesian-Data-Analysis-in-R/ACE/ACE_transform_cpponly.cpp')
Rcpp::sourceCpp('D:/test.cpp')
Rcpp::sourceCpp('D:/test.cpp')
Rcpp::sourceCpp('D:/test.cpp')
Rcpp::sourceCpp('D:/test.cpp')
Rcpp::sourceCpp('D:/test.cpp')
Rcpp::sourceCpp('D:/test.cpp')
tt<-test(100, 0, -0.2, 0.4)
tt<-test(100, 0, 1, -0.2, 0.4)
tt
hist(tt)
tt<-test(100, 0, 1, -2, 4)
tt
hist(tt)
plot(density(tt))
tt<-test(1000, 0, 1, -2, 4)
hist(tt)
plot(density(tt))
library(truncnorm)
bb<-rtruncnorm(1000, -2, 4, 0, 1)
hist(bb)
plot(density(bb))
ks.test(tt,bb)
bb<-rtruncnorm(1000, -0.2, 0.4, 0, 1)
tt<-test(1000, 0, 1, -0.2, 0.4)
ks.test(tt,bb)
ks.test(tt,bb)
ks.test(tt,bb)
ks.test(tt,bb)
ks.test(tt,bb)
ks.test(tt,bb)
hist(tt)
plot(density(tt))
hist(bb)
plot(density(bb))
bb<-rtruncnorm(1000, -1.2, 0.4, 0, 1)
tt<-test(1000, 0, 1, -1.2, 0.4)
ks.test(tt,bb)
hist(bb)
hist(tt)
tt<-test(1000, 0, 1, -1.2, 0.4)
bb<-rtruncnorm(1000, -1.2, 0.4, 0, 1)
ks.test(tt,bb)
hist(tt)
hist(bb)
hist(tt)
bb<-rtruncnorm(1000, -1.2, 0.4, 0.5, 2)
tt<-test(1000, 0.5, 2, -1.2, 0.4)
ks.test(tt,bb)
plot(density(bb))
plot(density(tt))
runif(10)
cat(runif(10))
Rcpp::sourceCpp('D:/test.cpp')
Rcpp::sourceCpp('D:/test.cpp')
Rcpp::sourceCpp('D:/test.cpp')
Rcpp::sourceCpp('D:/test.cpp')
tt<-test(1000)
tt
summary(tt)
hist(tt)
table(tt)
aa<-c(0.02718511 ,0.4587501 ,0.7330322, 0.2855598, 0.217619 ,0.3177815, 0.6242823, 0.4957301, 0.2802428, 0.7999797)
bb<-table(tt)
bb
str(bb)
bb[1]
bb[1,1]
bb[1][1]
bb/length(tt)
aa/sum(aa)
tt<-test(100000)
bb<-table(tt)
bb/length(tt)
tt<-test(1000000)
bb/length(tt)
aa/sum(aa)
bb<-table(tt)
bb/length(tt)
tmpvec<-scan("广州历史天气查询.txt",what="",sep=",");
t=data.frame(matrix(tmpvec[-length(tmpvec)],ncol=4,byrow=T),"城市"="广州",stringsAsFactors=F)
colnames(t)<-c("日期","天气","温度","风向","城市")
tmpvec2<-scan("广州.txt",what="",sep=",");
t2=data.frame(matrix(tmpvec2[-length(tmpvec2)],ncol=7,byrow=T),"城市"="广州",stringsAsFactors=F)
colnames(t2)=c("日期","AQI指数","PM2.5","PM10","Co","No2","So2","城市")
for(i in 2:7)
{
t2[,i]<-as.numeric(t2[,i])
}
dt1<-read.table("广州气象数据.txt",sep=",",head=T)
dt1[,1]<-as.character(as.Date(dt1$CST),format="%Y-%m-%d")
colnames(dt1)<-c("日期",colnames(dt1)[-1])
dt_merge<-merge(dt1,t2,by="日期",stringsAsFactors=F)
dt_merge<-data.frame(dt_merge[,-c(19,21,22,30)])
x<-as.matrix(dt_merge[,c(2:ncol(dt_merge))])
y<-as.matrix(dt_merge$PM2.5[-1])
index<-complete.cases(x)
x<-x[index,]
y<-y[index]
sizex<-nrow(x)
##index<-sample(1:sizex,sizex*1/2)
index<-c(1:(3/4*sizex))
trainx<-x[index,]
trainy<-y[index]
testx<-x[-index,]
testy<-y[-index]
testx<-testx[-nrow(testx),]
testy<-testy[-length(testy)]
setwd("D:\\KliveKP\\github\\Competition_PM25")
tmpvec<-scan("广州历史天气查询.txt",what="",sep=",");
t=data.frame(matrix(tmpvec[-length(tmpvec)],ncol=4,byrow=T),"城市"="广州",stringsAsFactors=F)
colnames(t)<-c("日期","天气","温度","风向","城市")
tmpvec2<-scan("广州.txt",what="",sep=",");
t2=data.frame(matrix(tmpvec2[-length(tmpvec2)],ncol=7,byrow=T),"城市"="广州",stringsAsFactors=F)
colnames(t2)=c("日期","AQI指数","PM2.5","PM10","Co","No2","So2","城市")
for(i in 2:7)
{
t2[,i]<-as.numeric(t2[,i])
}
dt1<-read.table("广州气象数据.txt",sep=",",head=T)
dt1[,1]<-as.character(as.Date(dt1$CST),format="%Y-%m-%d")
colnames(dt1)<-c("日期",colnames(dt1)[-1])
dt_merge<-merge(dt1,t2,by="日期",stringsAsFactors=F)
dt_merge<-data.frame(dt_merge[,-c(19,21,22,30)])
x<-as.matrix(dt_merge[,c(2:ncol(dt_merge))])
y<-as.matrix(dt_merge$PM2.5[-1])
index<-complete.cases(x)
x<-x[index,]
y<-y[index]
sizex<-nrow(x)
##index<-sample(1:sizex,sizex*1/2)
index<-c(1:(3/4*sizex))
trainx<-x[index,]
trainy<-y[index]
testx<-x[-index,]
testy<-y[-index]
testx<-testx[-nrow(testx),]
testy<-testy[-length(testy)]
save.image("D:/KliveKP/github/Competition_PM25/com.RData")
load("D:/KliveKP/github/Competition_PM25/com.RData")
